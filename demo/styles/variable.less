@f10: 10px;
@f12: 12px;
@f14: 14px;
@f15: 15px;
@f16: 16px;
@f17: 17px;
@f18: 18px;
@normalC: #333;
@grayC: #909399;
@borderC: #ebebeb;
@sunC: #FF9700;
@priceC: #FF6400;
@yellow: #FF801A;
@redC: #F44336;
@dangerC: #FF4444;
@backC: #fafafa;
@deepBackC: #f0f0f0;
@activeC: #3BB1FC;
@wxC: #25B33D;
@baseC: #25A2F2;
@gapW: 12px;

@color1: #03B4EB;
@color2: #4381EA;
.fz(@fz: @f14) {
  font-size: @fz * 2; /*px*/
}

// 函数不会被最终打包,更加干净,因此不使用类的方式.

// region 字体大小设置
.f10(@fz: @f10) {
  .fz(@fz);
}

.f12(@fz: @f12) {
  .fz(@fz);
}

.f14(@fz: @f14) {
  .fz(@fz);
}

.f15(@fz: @f15) {
  .fz(@fz);
}

.f16(@fz: @f16) {
  .fz(@fz);
}

.f17(@fz: @f17) {
  .fz(@fz);
}

.f18(@fz: @f18) {
  .fz(@fz);
}

// endregion

.scrolling() {
  overflow: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
}

.shadow() {
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.fill(@bottom: 0,@top: 0) {
  position: fixed !important;
  bottom: @bottom;
  right: 0;
  left: 0;
  top: @top;
}

.br(@radius: 4px) {
  border-radius: @radius;
}

.card(@h: 45px) {
  .li(@h);
}

.setCenter(@h) {
  height: @h;
  display: flex;
  align-items: center;
  justify-content: center;
}

.li(@h: 45px) {
  height: @h;
  display: flex;
  padding-right: @gapW;
  align-items: center;
  justify-content: space-between;
}

.full-column(@h: 50px) {
  display: flex;
  height: @h;
  justify-content: space-between;
  flex-direction: column;
  p {
    line-height: 1.1;
  }
}

.center(@left: 50%, @top: -50%) {
  transform: translate3d(-50%, @top, 0);
  position: absolute;
  left: @left;
  top: 50%;
}

.border(@color: #f0f0f0) {
  position: relative;
  &:before {
    transform: scaleY(.5);
    transform-origin: 50% 0;
    background-color: @color;
    pointer-events: none;
    position: absolute;
    height: 1px;
    content: '';
    bottom: 0;
    right: 0;
    left: 0;
  }
}

.layout(@gap: 10px) {
  background-color: #fff;
  margin-bottom: @gap;
}

.price(@fz: 28px, @color: #333) {
  &:before {
    .fz(@fz);
    color: @color;
    content: '￥';
  }
}

.translate(@x: 0px,@y: 0px,@z: 0px) {
  transform: translate3d(@x, @y, @z);
}

.two-line() {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-height: 1.3;
  overflow: hidden;
}

.linear(@dir: to bottom,@c1,@c2) {
  background-image: linear-gradient(@dir, @c1, @c2);
}

.ellipsis(@w:auto) {
  width: @w;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.code(@c) {
  position: relative;
  padding-left: 10px;
  &:before {
    content: '';
    left: 0;
    top: 50%;
    width: 6px;
    height: 18px;
    position: absolute;
    background-color: @c;
    border-radius: 0 6px 6px 0;
    transform: translateY(-50%);
  }
}

.sub-check(@c: @sunC) {
  position: relative;
  svg {
    color: transparent;
    position: absolute;
    bottom: 0;
    transition: .3s;
    right: 0;
  }
  &.checked {
    svg {
      color: @c;
    }
  }
}